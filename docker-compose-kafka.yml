version: '2.1'


services:
 product:
  build: productService
  mem_limit: 256m
  environment:
   - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
   - SPRING_APPLICATION_NAME=productsService
  depends_on:
    mongodb:
     condition: service_healthy
    kafka:
     condition: service_started  
 product-p1:
  build: productService
  mem_limit: 256m
  environment:
   - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
   - SPRING_APPLICATION_NAME=productsService
  depends_on:
   mongodb:
    condition: service_healthy
   kafka:
    condition: service_healthy    



 review:
  build: reviewsService
  mem_limit: 256m
  environment:
   - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
   - SPRING_APPLICATION_NAME=reviewsService
  depends_on:
   mysql:
    condition: service_healthy
   kafka:
    condition: service_healthy
 review-p1:
  build: reviewsService
  mem_limit: 256m
  environment:
   - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
   - SPRING_APPLICATION_NAME=reviewsService
  depends_on:
   mysql:
    condition: service_healthy
   kafka:
    condition: service_healthy


 product-composite:
  build: productComposite
  mem_limit: 256m
  environment:
   - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,kafka
   - SPRING_APPLICATION_NAME=productCompositeService
  depends_on:
   kafka:
    condition: service_healthy
 
 mongodb:
  image: mongo:6.0.4
  mem_limit: 256m
  ports:
   - "27017:27017"   
  command: mongod
  healthcheck:
   test: "mongostat -n 1"
   interval: 5s
   timeout: 2s
   retries: 60
   
 mysql:
  image: mysql:8.0.32
  mem_limit: 256m
  ports:
   - "3306:3306"
  environment:
   - MYSQL_ROOT_PASSWORD=rootpwd
   - MYSQL_DATABASE=review-db
   - MYSQL_USER=user
   - MYSQL_PASSWORD=pwd
  healthcheck:
   test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
   interval: 5s
   timeout: 2s
   retries: 60
 
 kafka:
  image: confluentinc/cp-kafka:7.3.1
  restart: always
  mem_limit: 512m
  ports:
   - "9092:9092"
  environment:
   - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
   - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
   - KAFKA_BROKER_ID=1
   - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  healthcheck:
   test: ['CMD', 'nc', '-z', 'localhost','9092']
   interval: 10s
   timeout: 5s
   retries: 5
 
 zookeeper:
  image: confluentinc/cp-zookeeper:7.3.1
  restart: always
  mem_limit: 512m
  ports:
   - "2181:2181"
  environment:
   - ZOOKEEPER_CLIENT_PORT=2181
  healthcheck:
   test: ['CMD', 'zookeeper-shell', 'localhost:2181', 'ruok']
   interval: 30s
   timeout: 10s
   retries: 5
 
 eureka:
  build: springCloud/eurekaServer
  mem_limit: 256m

 gateway:
   build: springCloud/gateway
   environment:
   - SPRING_PROFILES_ACTIVE=docker
   - SERVER_SSL_KEY_STORE=file:/keystore/edge-test.p12
   - SERVER_SSL_KEY_STORE_PASSWORD=password
   volumes:
    - $PWD/keystore:/keystore
   mem_limit: 256m
   ports:
     - "8443:8443"
   depends_on:
     auth-server:
      condition: service_healthy

 auth-server:
    environment: 
     - SPRING_PROFILES_ACTIVE=docker
    build: springCloud/authorizationServer
    mem_limit: 256m
    healthcheck:
     test: ["CMD","curl", "-fs", "http://localhost:9999/actuator/health"]
     interval: 5s
     timeout: 2s
     retries: 60