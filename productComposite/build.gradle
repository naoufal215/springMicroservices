plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ber.com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
	enabled = false
}

ext {
	springCloudVersion = "2023.0.3"
	resilience4jVersion = "2.2.0"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(":api")
	implementation project(":util")
	
	implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
	implementation "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'
	
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	
		
	
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'
	
	
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.github.resilience4j:resilience4j-bom:${resilience4jVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
